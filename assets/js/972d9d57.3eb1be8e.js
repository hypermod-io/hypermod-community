"use strict";(self.webpackChunkcodeshift_community=self.webpackChunkcodeshift_community||[]).push([[66],{4251:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var i=t(4848),n=t(8453);const a={id:"introduction",title:"Introduction",slug:"/",description:"Welcome to Hypermod. This is a community of developers who use Hypermod to automatically refactor their codebase. Join us to learn more about Hypermod, share your own codemods, and collaborate with others.",keywords:["codeshift","getting started","best practices"]},s=void 0,r={id:"introduction",title:"Introduction",description:"Welcome to Hypermod. This is a community of developers who use Hypermod to automatically refactor their codebase. Join us to learn more about Hypermod, share your own codemods, and collaborate with others.",source:"@site/docs/introduction.mdx",sourceDirName:".",slug:"/",permalink:"/hypermod-community/docs/",draft:!1,unlisted:!1,editUrl:"https://github.com/hypermod-io/hypermod-community/edit/main/website/docs/introduction.mdx",tags:[],version:"current",frontMatter:{id:"introduction",title:"Introduction",slug:"/",description:"Welcome to Hypermod. This is a community of developers who use Hypermod to automatically refactor their codebase. Join us to learn more about Hypermod, share your own codemods, and collaborate with others.",keywords:["codeshift","getting started","best practices"]},sidebar:"docs",next:{title:"Guiding principles",permalink:"/hypermod-community/docs/guiding-principles"}},d={},c=[{value:"Why?",id:"why",level:2},{value:"Objectives",id:"objectives",level:2},{value:"Fragmentation in the ecosystem",id:"fragmentation-in-the-ecosystem",level:3},{value:"Package adoption &amp; upgrade pain",id:"package-adoption--upgrade-pain",level:3},{value:"Lack of documentation &amp; familiarity",id:"lack-of-documentation--familiarity",level:3},{value:"What we offer",id:"what-we-offer",level:2},{value:"A standardized CLI",id:"a-standardized-cli",level:3},{value:"A centralized registry",id:"a-centralized-registry",level:3},{value:"Rich documentation",id:"rich-documentation",level:3},{value:"Getting started",id:"getting-started",level:2}];function l(e){const o={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(o.p,{children:["Hypermod (prev CodeshiftCommunity) is a community-owned global registry and documentation hub for codemods. This project provides users and maintainers of libraries with tools and resources to help them ",(0,i.jsx)(o.a,{href:"/hypermod-community/docs/authoring",children:"write"}),", ",(0,i.jsx)(o.a,{href:"/hypermod-community/docs/testing",children:"test"}),", ",(0,i.jsx)(o.a,{href:"/hypermod-community/docs/contribution",children:"publish"})," and ",(0,i.jsx)(o.a,{href:"/hypermod-community/docs/consuming",children:"use"})," codemods in a structured and familiar way. By providing a standardized platform for codemod authoring, publishing, and consumption, Hypermod aims to promote the use of codemods as a standard development practice and reduce the learning curve for these tools."]}),"\n",(0,i.jsx)(o.h2,{id:"why",children:"Why?"}),"\n",(0,i.jsx)(o.p,{children:"Keeping JavaScript dependencies up-to-date is an important part of maintaining a healthy codebase. Outdated dependencies can introduce security vulnerabilities, cause compatibility issues, and make it difficult to use the latest features and improvements."}),"\n",(0,i.jsx)(o.p,{children:"One way to keep your dependencies up-to-date is by using codemods. A codemod is a tool that can automatically refactor code, which can be particularly useful when making large-scale changes to a codebase."}),"\n",(0,i.jsxs)(o.p,{children:["For example, let's say you want to update the ",(0,i.jsx)(o.strong,{children:(0,i.jsx)(o.code,{children:"lodash"})})," library in your codebase from version 4 to version 5. This would require updating all of the import statements, function calls, and other references to ",(0,i.jsx)(o.strong,{children:(0,i.jsx)(o.code,{children:"lodash"})})," in your code. Instead of manually updating each instance, you can use a codemod to do the work for you."]}),"\n",(0,i.jsxs)(o.p,{children:["To use a codemod for this task, you would provide it with the old and new code for ",(0,i.jsx)(o.strong,{children:(0,i.jsx)(o.code,{children:"lodash"})}),", as well as the files or directories that you want to update. The codemod would then scan your code and make the necessary changes. This can save you a significant amount of time and effort."]}),"\n",(0,i.jsxs)(o.p,{children:["Additionally, using a codemod for this task can help ensure that your code stays consistent and up-to-date. By automatically updating all of the references to ",(0,i.jsx)(o.strong,{children:(0,i.jsx)(o.code,{children:"lodash"})}),", you can avoid any potential issues that may arise from using a mix of old and new code."]}),"\n",(0,i.jsx)(o.p,{children:"Of course, it is important to carefully review the changes made by a codemod to avoid any potential errors. However, in general, codemods can be a powerful tool for keeping your JavaScript dependencies up-to-date. They can save time, ensure consistency, and help keep your codebase healthy."}),"\n",(0,i.jsx)(o.h2,{id:"objectives",children:"Objectives"}),"\n",(0,i.jsx)(o.p,{children:"Our main aim is to create a community centered around codemods in order to promote the use of codemods as a standard development practice across the JavaScript ecosystem."}),"\n",(0,i.jsx)(o.p,{children:"We believe that providing the appropriate support, documentation, and tools can help us achieve this goal."}),"\n",(0,i.jsx)(o.p,{children:"To accomplish this, Hypermod aims to address three key challenges:"}),"\n",(0,i.jsxs)(o.ol,{children:["\n",(0,i.jsx)(o.li,{children:"Fragmentation in how codemods are written and distributed within the ecosystem"}),"\n",(0,i.jsx)(o.li,{children:"Difficulty adopting and upgrading packages"}),"\n",(0,i.jsx)(o.li,{children:"Lack of documentation and understanding about codemods."}),"\n"]}),"\n",(0,i.jsx)(o.h3,{id:"fragmentation-in-the-ecosystem",children:"Fragmentation in the ecosystem"}),"\n",(0,i.jsx)(o.p,{children:"Hypermod offers a platform-agnostic toolchain for creating, publishing, and using codemods, centered around the @hypermod/cli. This CLI provides common infrastructure and eliminates the need for developers to constantly recreate the same tools."}),"\n",(0,i.jsxs)(o.p,{children:["Some popular libraries in the ecosystem, such as ",(0,i.jsx)(o.a,{href:"https://github.com/reactjs/react-codemod",children:"React"}),", ",(0,i.jsx)(o.a,{href:"https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod",children:"material-ui"})," and ",(0,i.jsx)(o.a,{href:"https://nextjs.org/docs/advanced-features/codemods",children:"next.js"}),", all offer their own solutions for codemods, CLI, and distribution services. These services are inconsistent and often difficult for the average user to access. While providing these services can be helpful for upgrading libraries, it also places a significant burden on the projects that offer them."]}),"\n",(0,i.jsx)(o.p,{children:"Hypermod aims to address this issue by providing a standardized platform for codemod authoring, publishing, and consumption. This will help to reduce fragmentation and make it easier for developers to access the tools they need."}),"\n",(0,i.jsx)(o.h3,{id:"package-adoption--upgrade-pain",children:"Package adoption & upgrade pain"}),"\n",(0,i.jsx)(o.p,{children:"When publishing API changes, it is easy to shift the burden of upgrading onto your users. This can lead to users having to search through your changelog or even your code to figure out how to migrate to the latest version safely. In many cases, users will simply avoid upgrading or switch to a different library altogether."}),"\n",(0,i.jsx)(o.p,{children:"Hypermod offers a standardized versioning scheme that presents codemods in a user-friendly way. By following our guiding principles, your codemods will be idempotent, atomic, and reusable for years to come."}),"\n",(0,i.jsx)(o.p,{children:"Writing a changelog and constantly answering the same questions about how to migrate can be time-consuming and frustrating. By distilling all of the necessary changes into a codemod, you can provide users with a repeatable, updatable solution that can be improved and perfected, with the help of the community. This allows you to focus on more important tasks and avoid the headache of supporting users through the upgrade process."}),"\n",(0,i.jsx)(o.h3,{id:"lack-of-documentation--familiarity",children:"Lack of documentation & familiarity"}),"\n",(0,i.jsx)(o.p,{children:"Writing codemods can often feel like a specialized skill that only a few people in a company know how to do. Hypermod aims to change this by providing a hub for documentation and guidance."}),"\n",(0,i.jsx)(o.p,{children:"By offering guides, recipes, and reference materials, we hope to demystify codemods and make them more accessible to everyone. With the right documentation in place, it will be easier to normalize the use of codemods and reduce their learning curve."}),"\n",(0,i.jsx)(o.p,{children:"Our goal is to remove the stigma that codemods are difficult or time-consuming to write, and encourage everyone to adopt the practice of writing them. This will help to increase the number of contributors to codemods and ultimately improve the adoption of new technologies in the JavaScript ecosystem."}),"\n",(0,i.jsx)(o.h2,{id:"what-we-offer",children:"What we offer"}),"\n",(0,i.jsx)(o.h3,{id:"a-standardized-cli",children:"A standardized CLI"}),"\n",(0,i.jsxs)(o.p,{children:["Hypermod allows developers to publish codemods as their own NPM packages or as part of an existing NPM package. We provide a ",(0,i.jsx)(o.a,{href:"/hypermod-community/docs/cli",children:"standardized CLI tool"})," that can download and run the latest codemods from any location. This approach has the added benefit of allowing codemods to be published with dependencies, which is not currently possible with most JSCodeshift CLI implementations."]}),"\n",(0,i.jsxs)(o.p,{children:["By using NPM, we aim to make it easy for developers to adopt codemods. All they need to do is publish an existing package with a codemod.config.js file and they are ready to go. For more information, see our guide on ",(0,i.jsx)(o.a,{href:"/hypermod-community/docs/authoring#2-add-hypermod-to-an-existing-package",children:"authoring with existing packages"}),"."]}),"\n",(0,i.jsx)(o.h3,{id:"a-centralized-registry",children:"A centralized registry"}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.a,{href:"https://github.com/DefinitelyTyped/DefinitelyTyped",children:"DefinitelyTyped"})," is a great example of how consolidating type definitions in one place can promote familiarity and consistency for the entire TypeScript user base. By following a similar approach for codemods, the ecosystem can benefit from:"]}),"\n",(0,i.jsxs)(o.ol,{children:["\n",(0,i.jsx)(o.li,{children:"A single location for finding, using, and publishing codemods"}),"\n",(0,i.jsx)(o.li,{children:"Community support and bug fixes"}),"\n",(0,i.jsx)(o.li,{children:"A wealth of examples to learn from"}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:"Our goal is to achieve broad coverage of common JS dependencies, such as React, Jest, and Chalk, by collaborating with the wider JS community to produce high-quality, versioned codemods."}),"\n",(0,i.jsxs)(o.p,{children:["Hypermod offers a registry that hosts and automatically publishes codemods under the ",(0,i.jsx)(o.a,{href:"https://github.com/hypermod-io/hypermod-community/tree/main/community",children:"/community directory"}),". This directory organizes codemods by package name and version, and publishes them to npm as modules that can be updated or improved. This ensures that users who run codemods always have access to the latest version."]}),"\n",(0,i.jsx)(o.h3,{id:"rich-documentation",children:"Rich documentation"}),"\n",(0,i.jsx)(o.p,{children:"Hypermod is focused on providing documentation, guides, recipes, and reference materials to demystify codemods and make them more accessible. By offering this guidance, we hope to make it easier for developers to use codemods and reduce the learning curve."}),"\n",(0,i.jsx)(o.p,{children:"We want to remove the perception that codemods are difficult or time-consuming to write, and encourage everyone to adopt the practice of using them. By doing so, we aim to increase the number of contributors to codemods and ultimately improve the adoption of new technologies in the JavaScript ecosystem."}),"\n",(0,i.jsx)(o.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:(0,i.jsx)(o.a,{href:"/hypermod-community/docs/your-first-codemod",children:"Your first codemod"})}),"\n",(0,i.jsx)(o.li,{children:(0,i.jsx)(o.a,{href:"/hypermod-community/docs/consuming",children:"Consuming codemods"})}),"\n",(0,i.jsx)(o.li,{children:(0,i.jsx)(o.a,{href:"/hypermod-community/docs/authoring",children:"Writing codemods"})}),"\n",(0,i.jsx)(o.li,{children:(0,i.jsx)(o.a,{href:"/hypermod-community/docs/testing",children:"Testing codemods"})}),"\n",(0,i.jsx)(o.li,{children:(0,i.jsx)(o.a,{href:"/hypermod-community/docs/your-first-codemod",children:"Learning resources"})}),"\n",(0,i.jsx)(o.li,{children:(0,i.jsx)(o.a,{href:"/hypermod-community/docs/contribution",children:"Publishing & contribution"})}),"\n"]})]})}function h(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>r});var i=t(6540);const n={},a=i.createContext(n);function s(e){const o=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(a.Provider,{value:o},e.children)}}}]);